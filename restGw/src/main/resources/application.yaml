server:
  shutdown: graceful
  port: 8088
spring:
  application.name: rest-gw
  profiles:
    active: local
  cache.type: redis
  webflux:
    base-path: /
  cloud:
    stream:
      function:
        routing.enabled: true
        definition: functionRouter;reply
      binders:
        kafka1:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder:
              enableObservation: true
              brokers: 110.40.158.88:29092
              minPartitionCount: 9
              stateStoreRetry:
                maxAttempts: 1
                backOffInterval: 60000
      bindings:
        # Producers
        # Consumers
        functionRouter-in-0:
          destination: ${spring.profiles.active:local}-${spring.application.name}
          group: ${spring.profiles.active:local}-${spring.application.name}-default-group
          content-type: application/json
          consumer:
            max-attempts: 1
            auto-bind-dlq: true
            ackMode: MANUAL
            multiplex: true
            concurrency: 3
          error-handler-definition: ErrorDispatcher
        reply-in-0:
          with-crm: false
          destination: ${spring.profiles.active:local}-${spring.application.name}
          group: ${spring.profiles.active:local}-${spring.application.name}-reply-group
          consumer:
            max-attempts: 1
            auto-bind-dlq: true
            ackMode: MANUAL
            multiplex: true
            concurrency: 1
          error-handler-definition: ErrorDispatcher

management:
  server:
    port: 8000
  endpoints:
    web:
      exposure:
        include: bindings
logging.level.org.springframework.cache: TRACE

